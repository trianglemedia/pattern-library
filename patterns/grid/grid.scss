//Based off of https://github.com/artofrawr/profoundgrid/

$grid-columns: 8 !default;
$grid-container-width: -calc-rem(960) !default;
$grid-column-gutter: -calc-rem(30) !default;
$grid-last-child-float: $flow-opposite-direction !default;

@import "clearfix";
@import "flow";

@function grid-calc($column-index, $total-columns) {
    @return percentage($column-index / $total-columns);
}

@mixin grid-container($behavior: false) {
    // use @include grid-row(nest); to include a nested row
    @if $behavior == nest {
        width: auto;
        margin-#{$flow-default-float}: -($grid-column-gutter / 2);
        margin-#{$flow-opposite-direction}: -($grid-column-gutter / 2);
        margin-top: 0;
        margin-bottom: 0;
        max-width: none;
    }
    @else if $behavior == collapse {
        width: 100%;
        margin: 0;
        max-width: $grid-container-width;
    }
    @else if $behavior == nest-collapse {
        width: auto;
        margin: 0;
        max-width: none;
    }
    @else {
        width: 100%;
        margin-#{$flow-default-float}: auto;
        margin-#{$flow-opposite-direction}: auto;
        margin-top: 0;
        margin-bottom: 0;
        max-width: $grid-container-width;
    }
    // Clearfix for all rows
    @extend %clearfix;
}

%grid-container {
    @include grid-container($behavior: false);
}

%grid-container-full {
    @include grid-container($behavior: false);
    max-width: 100%;
}

%grid-container-collapsed {
    @include grid-container($behavior: collapse);
}

@mixin grid-column-offset($offset: 1) {
    margin-#{$flow-default-float}: grid-calc($offset, $grid-columns) !important;
}

@mixin grid-column-span($span: 1) {
    width: grid-calc($span, $grid-columns);
}

@mixin grid-column-collapsed {
    padding-left: 0;
    padding-right: 0;
}

@mixin grid-column-last {
    float: $flow-opposite-direction;
}

@mixin grid-column($span: false, $last: false, $center: false, $offset: false, $push: false, $pull: false, $collapse: false, $float: true, $position: false) {
    // If positioned for default .column, include relative position
    // push and pull require position set
    @if $position or $push or $pull {
        position: relative;
    }
    // If collapsed, get rid of gutter padding
    @if $collapse {
        @include grid-column-collapsed;
    }
    @else if $collapse == false {
        padding-left: $grid-column-gutter / 2;
        padding-right: $grid-column-gutter / 2;
    }
    // If a column number is given, calculate width
    @if $span {
        @include grid-column-span($span);
        // If last column, float naturally instead of to the right
        @if $last {
            @include grid-column-last;
        }
    }
    // Source Ordering, adds left/right depending on which you use.
    @if $push {
        #{$flow-default-float}: grid-calc($push, $grid-columns);
        #{$flow-opposite-direction}: auto;
    }
    @if $pull {
        #{$flow-opposite-direction}: grid-calc($pull, $grid-columns);
        #{$flow-default-float}: auto;
    }
    @if $float {
        @if $float == left or $float == true {
            float: $flow-default-float;
        }
        @else if $float == right {
            float: $flow-opposite-direction;
        }
        @else {
            float: none;
        }
    }
    // If centered, get rid of float and add appropriate margins
    @if $center {
        margin-#{$flow-default-float}: auto;
        margin-#{$flow-opposite-direction}: auto;
        float: none;
    }
    // If offset, calculate appropriate margins
    @if $offset {
        @include grid-column-offset($offset);
    }
}

%grid-column-collapsed {
    @include grid-column-collapsed;
}

%grid-column-last {
    @include grid-column-last;
}

@for $i from 1 through $grid-columns {
    %grid-column-#{$i} {
        @include grid-column($span: $i);
    }
    %grid-column-#{$i}-collapsed {
        @include grid-column($span: $i, $collapse: true);
    }
    %grid-column-#{$i}-last {
        @include grid-column($span: $i, $last: true, $float: false);
    }
    %grid-column-offset-#{$i} {
        @include grid-column-offset($i);
    }
}